version: '3'

services:
  #backend framework
  django:
    build:
      context: srcs/backend
      dockerfile: ../../docker/django/dockerfile
    container_name: django
    restart: always
    expose:
      - "8000"
    networks:
      - ft_network
    env_file:
      .env
    depends_on:
      - postgresql
  
  #Database server
  postgresql:
    build: docker/postgresql
    restart: always
    container_name: postgresql
    expose:
      - "5432"
    networks:
      - ft_network
    env_file:
      .env
    tty: true
  
  #webserver
  nginx:
    build:
      context: srcs/frontend
      dockerfile: ../../docker/nginx/dockerfile
    logging:
      driver: syslog
      options:
        syslog-address: "udp://42.42.42.1:5858"
    restart: always
    container_name: nginx
    ports:
      - "4243:443"
      - "5601:5601"
    networks:
      - ft_network
    tty: true
    depends_on:
      - django
  
# ELK containers
  elasticsearch:
    container_name: elasticsearch
    build: docker/ELK/elasticsearch
    expose:
      - "9200"
    networks:
      ft_network:
        ipv4_address: 42.42.42.0
    env_file:
      .env
    restart: always

  logstash:
    container_name: logstash
    build: docker/ELK/logstash
    expose:
      - "5959"
      - "5858/udp"
    networks:
      ft_network:
        ipv4_address: 42.42.42.1
    env_file:
      .env
    restart: always
    depends_on:
      - elasticsearch

  kibana:
    container_name: kibana
    build: docker/ELK/kibana
    expose:
      - "5601"
    networks:
      ft_network:
        ipv4_address: 42.42.42.2
    env_file:
      .env
    restart: always
    depends_on:
      - elasticsearch

networks:
  ft_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 42.42.0.0/16
