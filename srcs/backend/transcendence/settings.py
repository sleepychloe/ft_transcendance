"""
Django settings for transcendence project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-e8*xev0o%76d*l6a=ijafpt-!4z@-yly-a2mtabt_uuymk4#j0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# ALLOWED_HOSTS = ['10.12.1.3']
ALLOWED_HOSTS = ['localhost']

# CSRF_TRUSTED_ORIGINS = ["https://10.12.1.3:4243"]
CSRF_TRUSTED_ORIGINS = ["https://localhost:4243"]

CORS_ALLOW_ALL_ORIGINS = True

# Application definition

INSTALLED_APPS = [
    'daphne',
    'channels',
    'user.apps.UserConfig',
	'apitest.apps.ApitestConfig',
    'login.apps.LoginConfig',
	'game.apps.GameConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'api.apps.ApiConfig',
	'index',
]

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)

STATIC_URL = '/static/'

SESSION_COOKIE_HTTPONLY = True

MEDIA_ROOT = os.path.join(BASE_DIR, 'assets')

MEDIA_URL = '/images/'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n',
            ],
        },
    },
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'transcendence.middleware.jwt_middleware',
]

ROOT_URLCONF = 'transcendence.urls'

PROJECT_PATH = os.path.realpath(os.path.dirname(__file__))

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates/')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'transcendence.wsgi.application'
ASGI_APPLICATION = 'transcendence.asgi.application'

CHANNEL_LAYERS = {
	'default': {
		'BACKEND': 'channels.layers.InMemoryChannelLayer',
    },
}

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

db_user=os.environ.get('DB_USER')
db_password=os.environ.get('DB_PASSWORD')
db_host=os.environ.get('DB_HOST')
db_port=os.environ.get('DB_PORT')
postgres_db=os.environ.get('POSTGRES_DB')

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': postgres_db,
		'USER': db_user,
		'PASSWORD': db_password,
		'HOST': db_host,
		'PORT': db_port,
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/


STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'json_formatter': {
			'()': 'pythonjsonlogger.jsonlogger.JsonFormatter',
            'format': '%(levelname)s %(asctime)s %(module)s %(message)s'
        },
    },
    'handlers': {
        'logstash_debug': {
            'level': 'DEBUG', #로그 레벨 (info, debug, error etc..)
            'class': 'logstash.TCPLogstashHandler', #python-logstash 설치
            'host' : 'logstash',
			'port' : 5959, #default 5959
			'version' : 1,
			'message_type' : 'django',
			'fqdn' : False, #Fully qualified domain name. default false
            'tags' : ['django'],
        },
        'logstash_info': {
            'level': 'INFO', #로그 레벨 (info, debug, error etc..)
            'class': 'logstash.TCPLogstashHandler', #python-logstash 설치
            'host' : 'logstash',
			'port' : 5959, #default 5959
			'version' : 1.1,
			'message_type' : 'django',
			'fqdn' : False, #Fully qualified domain name. default false
            'tags' : ['django'],
        },
    },
    'loggers': {
        'django': {
            'handlers' : ['logstash_debug'],
			'level' : 'DEBUG',
			'propagate' : True,
        },
        'django2': {
			'handlers' : ['logstash_info'],
			'level' : 'INFO',
			'propagate' : True,
        },
    },
}


LANGUAGE_CODE = 'en-us'

LANGUAGES = [
    ('en', 'English'),
    ('ko', 'Korean'),
    ('fr', 'French'),
]

USE_I18N = True

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale'),
]