version: '3'

services:
  #backend framework
  django:
    build:
      context: ../srcs/backend
      dockerfile: ../../docker/django/dockerfile
    container_name: django
    restart: always
    expose:
      - "8000"
    networks:
      - ft_network
    env_file:
      .env
    depends_on:
      - postgresql
    tty: true
  
  #Database server
  postgresql:
    build: ./postgresql
    container_name: postgresql
    expose:
      - "5432"
    networks:
      - ft_network
    env_file:
      .env
    tty: true
  
  #webserver
  nginx:
    build: ./nginx
    restart: always
    container_name: nginx
    ports:
      - "443:443"
    networks:
      - ft_network
    tty: true
    depends_on:
      - django
  
# #ELK containers
#   elasticsearch:
#     container_name: elasticsearch
#     build: ./ELK/elasticsearch
#     expose:
#       - "9200"
#     volumes:
#       - "./ELK/certificat:/usr/share/elasticsearch/config/certs"
#     networks:
#       ft_network:
#         ipv4_address: 42.42.42.0
#     env_file:
#       .env
#     restart: always

#   logstash:
#     container_name: logstash
#     build: ./ELK/logstash
#     expose:
#       - "5959"
#     volumes:
#       - "./ELK/certificat:/usr/share/logstash/config/certs"
#     networks:
#       ft_network:
#         ipv4_address: 42.42.42.1
#     env_file:
#       .env
#     restart: always
#     depends_on:
#       - elasticsearch

#   kibana:
#     container_name: kibana
#     build: ./ELK/kibana
#     ports:
#       - "5601:5601"
#     volumes:
#       - "./ELK/certificat:/usr/share/kibana/config/certs"
#     networks:
#       ft_network:
#         ipv4_address: 42.42.42.2
#     env_file:
#       .env
#     restart: always
#     depends_on:
#       - elasticsearch

networks:
  ft_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 42.42.0.0/16
